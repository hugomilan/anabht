install.packages( c("mgcv", "car", "MMS", "nlme", "lme4", "lsmeans", "evaluate", "digest", "formatR", "highr", "markdown", "stringr", "yaml", "htmltools", "caTools", "bitops", "knitr", "jsonlite", "base64enc", "rprojroot", "rmarkdown") )
lss
ls
ls()
library(haven)
X0004_T3 <- read_sav("/media/hugomilan17/Extra Drive 1/Hugo/Doutorado/Semestres/Cornell/2017 Spring/Experiment/Data/eTemperature/0004 T3.sav")
View(X0004_T3)
10^0.00001*1
10^0.00001
plot(10^(seq(-10, 0, 0.00001)))
plot(seq(0, 1, .000001)*10^(seq(-10, 0, 0.00001)))
plot(seq(0, 1, .01)*10^(seq(-10, 0, 0.1)))
10^-10
library(foreach)
library(doMC)
citation('foreach')
citation("doMC")
?doMC
setwd("/home/public/OneDrive/Cornell/Publications/2018/Piglets 2013/code/V05/R/Plots")
library("plot3D")
library(rmatio) #read.mat
# Energy flux balance given Ta_brooder and supplemental heat.
supplemental_heat_Ta_brooder = read.mat("../../ensembleData/KM/bestEnsembleSurfaceBrooder_0_1000_0_40_EnergyFluxBalance.mat") # needs to be updated
weight_min = 2.162
weight_max = 6.1
Ta_brooder_min = 17.77
Ta_brooder_max = 33.61
# Energy balance give Ta_brooder and the effects the supplemental heat will have on Ta_brooder
supplemental_heat_Ta_brooderAddedInc = read.mat("../../ensembleData/KM/bestEnsembleSurfaceBrooderAddedInc_0_1000_0_40_EnergyFluxBalance.mat")
weight_min = 2.162
weight_max = 6.1
Ta_brooder_min = 17.77
Ta_brooder_max = 33.61
# the absolute value and negate it
supplemental_heat_Ta_brooderAddedInc$min_val_lower_neg_abs = -abs(supplemental_heat_Ta_brooderAddedInc$min_val_lower_real)
supplemental_heat_Ta_brooderAddedInc$min_val_lower_neg_abs_filt = supplemental_heat_Ta_brooderAddedInc$min_val_lower_neg_abs
# we manually remove any values that are above a threshold. Threshold was chosen manually
supplemental_heat_Ta_brooderAddedInc$min_val_lower_neg_abs_filt[supplemental_heat_Ta_brooderAddedInc$min_val_lower_neg_abs_filt > -1.8] = 0
supplemental_heat_Ta_brooderAddedInc$min_val_mean_neg_abs = -abs(supplemental_heat_Ta_brooderAddedInc$min_val_mean_real)
supplemental_heat_Ta_brooderAddedInc$min_val_mean_neg_abs_filt = supplemental_heat_Ta_brooderAddedInc$min_val_mean_neg_abs
# we manually remove any values that are above a threshold. Threshold was chosen manually
supplemental_heat_Ta_brooderAddedInc$min_val_mean_neg_abs_filt[supplemental_heat_Ta_brooderAddedInc$min_val_mean_neg_abs_filt > -1.8] = 0
supplemental_heat_Ta_brooderAddedInc$min_val_median_neg_abs = -abs(supplemental_heat_Ta_brooderAddedInc$min_val_median_real)
supplemental_heat_Ta_brooderAddedInc$min_val_median_neg_abs_filt = supplemental_heat_Ta_brooderAddedInc$min_val_median_neg_abs
# we manually remove any values that are above a threshold. Threshold was chosen manually
supplemental_heat_Ta_brooderAddedInc$min_val_median_neg_abs_filt[supplemental_heat_Ta_brooderAddedInc$min_val_median_neg_abs_filt > -1.8] = 0
supplemental_heat_Ta_brooderAddedInc$min_val_upper_neg_abs = -abs(supplemental_heat_Ta_brooderAddedInc$min_val_upper_real)
supplemental_heat_Ta_brooderAddedInc$min_val_upper_neg_abs_filt = supplemental_heat_Ta_brooderAddedInc$min_val_upper_neg_abs
# we manually remove any values that are above a threshold. Threshold was chosen manually
supplemental_heat_Ta_brooderAddedInc$min_val_upper_neg_abs_filt[supplemental_heat_Ta_brooderAddedInc$min_val_upper_neg_abs_filt > -1.8] = 0
# Regression optimum supplemental heat given air temperature and weight
Hopt_dataset = data.frame(Hopt = as.vector(t(supplemental_heat_Ta_brooderAddedInc$min_power_mean_real)), Ta = supplemental_heat_Ta_brooderAddedInc$Ta_pen_surface_initial, W = rep(supplemental_heat_Ta_brooderAddedInc$weights, each = length(supplemental_heat_Ta_brooderAddedInc$Ta_pen_surface_initial) ) )
Hopt_dataset$Hopt2 = Hopt_dataset$Hopt
# discharging values lower than 5, as for removing noise
Hopt_dataset$Hopt2[Hopt_dataset$Hopt2 < 5] = NA
Hopt.lm1 = lm(Hopt2 ~ Ta*W, data=Hopt_dataset)
summary(Hopt.lm1)
anova(Hopt.lm1)
Hopt.lm1.predictions = predict(Hopt.lm1, Hopt_dataset)
Hopt.lm1.predictions[Hopt.lm1.predictions<0] = NA
# This is is missing a little curve that exists near W = 1kg
image2D( matrix(Hopt.lm1.predictions, nrow = 191, byrow = T), contour = list( labcex = 1.6, lwd = 4, vfont = c("sans serif", "bold italic")),
colkey = FALSE, x = supplemental_heat_Ta_brooderAddedInc$weights, y = supplemental_heat_Ta_brooderAddedInc$Ta_pen_surface_initial,
xlab = "Weight (kg)",
ylab = expression(paste("Air temperature ("^{o},"C)", sep = "")),
mgp=c(2.3,0.7,0), cex.axis = 1.4, cex.lab = 1.6, xaxt = "n")
axis(1, c(1, 5, 10, 15, 20), cex.axis = 1.4, mgp=c(2.3,0.7,0))
rect(weight_min, Ta_brooder_min, weight_max, Ta_brooder_max, lty = 2, lwd = 3)
Hopt.lm2 = lm(Hopt2 ~ poly(Ta,2, raw = T)*poly(W,2, raw = T), data=Hopt_dataset)
summary(Hopt.lm2)
anova(Hopt.lm2)
Hopt.lm2.predictions = predict(Hopt.lm2, Hopt_dataset)
Hopt.lm2.predictions[Hopt.lm2.predictions<0] = NA
# This is is missing a little curve that exists near W = 1kg
image2D( matrix(Hopt.lm2.predictions, nrow = 191, byrow = T), contour = list( labcex = 1.6, lwd = 4, vfont = c("sans serif", "bold italic")),
colkey = FALSE, x = supplemental_heat_Ta_brooderAddedInc$weights, y = supplemental_heat_Ta_brooderAddedInc$Ta_pen_surface_initial,
xlab = "Weight (kg)",
ylab = expression(paste("Air temperature ("^{o},"C)", sep = "")),
mgp=c(2.3,0.7,0), cex.axis = 1.4, cex.lab = 1.6, xaxt = "n")
axis(1, c(1, 5, 10, 15, 20), cex.axis = 1.4, mgp=c(2.3,0.7,0))
rect(weight_min, Ta_brooder_min, weight_max, Ta_brooder_max, lty = 2, lwd = 3)
# We will keep the 3rd degree polynomium with interactions
Hopt.lm3 = lm(Hopt2 ~ poly(Ta,3, raw = T)*poly(W,3, raw = T), data=Hopt_dataset)
summary(Hopt.lm3)
